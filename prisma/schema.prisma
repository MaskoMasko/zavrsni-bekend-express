generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./dev.db"
}

model Student {
    id            Int      @id @default(autoincrement())
    jmbag         String   @unique
    firstName     String
    lastName      String
    email         String   @unique
    passwordHash  String
    enrolledYear  Int
    repeatingYear Boolean  @default(false)
    module        String?
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt

    enrollments StudentCourse[]
}

model Course {
    id             Int      @id @default(autoincrement())
    name           String   @unique
    holder         String
    description    String
    ects           Int
    semester       Int // 1-6
    year           Int // 1-3
    prerequisite   Course?  @relation("CoursePrerequisite", fields: [prerequisiteId], references: [id])
    prerequisiteId Int?
    dependents     Course[] @relation("CoursePrerequisite")
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt

    enrollments StudentCourse[]
}

enum EnrollmentStatus {
    PASSED
    FAILED
    ACTIVE
}

model StudentCourse {
    id               Int              @id @default(autoincrement())
    student          Student          @relation(fields: [studentId], references: [id], onDelete: Cascade)
    studentId        Int
    course           Course           @relation(fields: [courseId], references: [id], onDelete: Cascade)
    courseId         Int
    status           EnrollmentStatus
    assignedYear     Int // akademska godina studenta kad je status dodan (1-3)
    assignedSemester Int // semestar (1-6)
    createdAt        DateTime         @default(now())
    updatedAt        DateTime         @updatedAt

    @@index([studentId])
    @@index([courseId])
    @@index([studentId, assignedSemester])
}
